var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.129,1,1.516]],["body/controllers/AppController.html",[0,1.683,1,2.26,2,1.512,3,0.723,4,0.723,5,0.511,6,2.474,7,0.981,8,2.26,9,3.715,10,2.063,11,0.055,12,1.512,13,3.097,14,1.757,15,1.945,16,1.088,17,0.981,18,1.861,19,2.474,20,0.723,21,0.33,22,2.474,23,2.474,24,1.512,25,3.097,26,0.042,27,0.042]],["title/modules/AppModule.html",[28,0.847,29,1.516]],["body/modules/AppModule.html",[1,2.344,2,1.785,3,0.635,4,0.635,5,0.448,11,0.055,16,1.206,17,0.861,18,2.007,19,2.17,20,0.635,21,0.289,26,0.038,27,0.038,28,1.309,29,2.799,30,1.148,31,1.327,32,1.81,33,1.81,34,1.327,35,2.344,36,1.541,37,2.17,38,2.17,39,2.17,40,2.319,41,2.436,42,1.81,43,1.81,44,2.717,45,3.656,46,2.717,47,2.717]],["title/injectables/AppService.html",[18,1.129,48,1.305]],["body/injectables/AppService.html",[3,0.769,4,0.769,5,0.543,7,1.043,8,2.35,9,3.8,11,0.054,12,1.607,14,1.867,15,2.022,16,0.898,17,1.043,18,1.75,20,0.769,21,0.35,24,1.607,26,0.044,27,0.044,48,2.022,49,2.193,50,2.629,51,3.291,52,3.291,53,3.291]],["title/classes/CreateUserDto.html",[21,0.284,54,1.129]],["body/classes/CreateUserDto.html",[3,0.891,4,0.891,5,0.629,11,0.051,20,0.891,21,0.406,26,0.048,27,0.048,54,1.915,55,2.541,56,3.046,57,2.541]],["title/modules/DatabaseModule.html",[28,0.847,58,1.781]],["body/modules/DatabaseModule.html",[3,0.81,4,0.81,5,0.572,11,0.055,16,1.169,17,1.099,20,0.81,21,0.369,26,0.045,27,0.045,28,1.356,30,1.466,35,1.968,36,1.968,58,2.852,59,3.469,60,3.093,61,3.469]],["title/classes/UpdateUserDto.html",[21,0.284,62,1.305]],["body/classes/UpdateUserDto.html",[3,0.806,4,0.806,5,0.569,11,0.054,16,1.164,20,0.806,21,0.367,26,0.045,27,0.045,54,1.457,55,2.298,57,2.298,62,2.082,63,2.755,64,4.264,65,4.264,66,3.449,67,2.755,68,2.755,69,1.956,70,1.956]],["title/entities/User.html",[71,1.516,72,1.129]],["body/entities/User.html",[3,0.561,4,0.561,5,0.396,7,0.76,10,3.048,11,0.055,12,2.233,15,2.408,16,0.655,20,0.561,21,0.256,26,0.035,27,0.035,71,1.905,72,1.419,73,1.362,74,1.917,75,2.237,76,3.873,77,3.873,78,2.58,79,3.873,80,3.873,81,2.58,82,1.932,83,4.984,84,2.4,85,2.4,86,2.682,87,3.873,88,2.4,89,2.4,90,2.4,91,2.4,92,1.599]],["title/controllers/UsersController.html",[0,1.129,93,1.516]],["body/controllers/UsersController.html",[0,0.773,2,0.893,3,0.427,4,0.427,5,0.302,7,0.579,8,1.563,10,2.638,11,0.056,12,1.933,14,2.246,15,2.221,16,1.008,17,0.579,20,0.427,21,0.195,22,1.461,23,1.461,24,1.933,26,0.029,27,0.029,54,1.758,62,2.17,69,1.563,70,1.563,78,2.773,82,1.559,93,1.563,94,1.461,95,1.829,96,1.219,97,2.948,98,2.201,99,2.201,100,1.836,101,1.461,102,3.316,103,1.829,104,2.948,105,2.459,106,2.948,107,1.829,108,1.461,109,2.756,110,1.829,111,1.461,112,2.756,113,1.829,114,1.461,115,2.756,116,1.829,117,2.756,118,1.829,119,1.829,120,1.829,121,1.401,122,1.461,123,1.461,124,1.461,125,1.829,126,1.829,127,1.829,128,1.829,129,1.829,130,1.829,131,1.829,132,1.829,133,1.829,134,1.829]],["title/modules/UsersModule.html",[28,0.847,40,1.305]],["body/modules/UsersModule.html",[2,1.88,3,0.686,4,0.686,5,0.485,11,0.054,16,1.173,17,0.931,20,0.686,21,0.313,26,0.04,27,0.04,28,1.361,30,1.242,31,1.435,32,1.958,33,1.958,34,1.435,35,2.437,36,1.667,40,2.371,41,2.566,42,1.958,43,1.958,93,2.437,121,2.052,122,2.347,135,2.347,136,2.347,137,2.939,138,2.939]],["title/injectables/UsersService.html",[48,1.305,121,1.129]],["body/injectables/UsersService.html",[3,0.459,4,0.459,5,0.324,7,0.623,8,1.65,11,0.055,12,1.993,14,2.509,15,1.993,16,0.945,17,0.623,20,0.459,21,0.209,24,1.993,26,0.031,27,0.031,48,1.42,49,1.31,54,1.725,62,2.16,69,1.65,70,1.65,72,1.616,78,2.848,82,1.616,86,3.704,96,1.31,97,3.056,98,2.324,99,2.324,100,1.938,101,2.324,104,3.056,105,2.549,106,3.056,108,2.324,111,2.324,114,2.324,121,1.229,123,1.571,124,1.571,139,1.571,140,1.966,141,1.966,142,1.966,143,1.966,144,1.966,145,4.083,146,1.966,147,1.116,148,1.966,149,1.966]],["title/coverage.html",[150,2.888]],["body/coverage.html",[0,1.545,1,1.541,5,0.448,6,2.17,11,0.054,18,1.148,21,0.389,26,0.038,27,0.038,34,1.327,48,1.785,50,2.17,54,1.148,56,2.17,57,2.436,60,1.81,62,1.327,63,2.17,71,1.541,72,1.148,74,2.17,82,1.148,93,1.541,94,2.17,121,1.148,139,2.17,147,1.541,150,2.17,151,2.17,152,2.717,153,2.717,154,5.052,155,3.656,156,2.17,157,2.17,158,3.656,159,2.17,160,4.75,161,2.17,162,2.17,163,2.717,164,3.656,165,2.717,166,2.17]],["title/dependencies.html",[31,1.565,167,1.795]],["body/dependencies.html",[11,0.055,17,1.049,26,0.044,27,0.044,31,1.616,67,2.644,68,2.644,92,2.205,168,4.544,169,3.31,170,3.31,171,3.31,172,3.31,173,2.644,174,3.31,175,2.644,176,3.31,177,2.644,178,3.31,179,2.644,180,2.644,181,3.31,182,3.31,183,3.31,184,3.31]],["title/miscellaneous/functions.html",[185,1.275,186,2.56]],["body/miscellaneous/functions.html",[7,1.233,11,0.048,26,0.048,27,0.048,34,2.381,162,3.108,185,2.207,186,3.108,187,3.891]],["title/index.html",[7,0.712,188,2.247,189,1.795]],["body/index.html",[0,0.779,5,0.523,11,0.054,21,0.318,26,0.015,27,0.015,28,0.947,69,1.046,70,0.784,71,0.784,72,0.333,73,0.447,81,0.921,82,0.333,92,2.594,96,1.229,100,1.229,105,0.921,147,1.891,151,1.104,166,1.474,173,0.63,175,1.104,177,0.63,179,1.104,180,1.104,189,0.63,190,1.382,191,0.788,192,0.788,193,0.788,194,0.788,195,0.788,196,0.788,197,0.788,198,0.788,199,0.788,200,0.788,201,0.788,202,0.788,203,0.788,204,0.788,205,0.788,206,0.788,207,0.788,208,2.52,209,0.788,210,1.845,211,0.788,212,3.894,213,0.788,214,0.788,215,0.788,216,3.473,217,4.231,218,3.333,219,2.52,220,0.788,221,0.788,222,0.788,223,1.382,224,0.788,225,0.788,226,1.382,227,1.382,228,1.382,229,1.382,230,0.788,231,1.382,232,0.788,233,0.788,234,0.788,235,1.382,236,0.788,237,3.894,238,1.845,239,0.788,240,1.382,241,1.845,242,1.845,243,0.788,244,1.845,245,0.788,246,0.788,247,2.216,248,0.788,249,2.773,250,0.788,251,1.382,252,1.845,253,0.788,254,1.382,255,0.788,256,0.788,257,0.788,258,0.525,259,0.788,260,0.788,261,0.788,262,0.63,263,0.788,264,0.788,265,0.788,266,0.788,267,0.788,268,0.788,269,0.788,270,0.788,271,0.788,272,0.788,273,0.788,274,0.788,275,0.788,276,0.788,277,0.788,278,0.788,279,0.788,280,0.788,281,0.788,282,0.788,283,0.788,284,0.788,285,0.788,286,2.52,287,0.788,288,0.788,289,0.788,290,0.788,291,0.788,292,1.382,293,0.788,294,0.788,295,3.596,296,0.788,297,1.382,298,1.474,299,1.474,300,0.788,301,2.988,302,0.788,303,0.788,304,1.104,305,4.114,306,1.104,307,1.104,308,1.845,309,1.382,310,0.788,311,0.788,312,2.988,313,1.382,314,0.788,315,0.788,316,1.382,317,0.788,318,0.788,319,0.788,320,0.788,321,0.788,322,0.788,323,0.788,324,0.788,325,0.788,326,0.788,327,0.788,328,1.382,329,0.788,330,0.788,331,0.788,332,0.788,333,0.788,334,1.382,335,1.845,336,3.173,337,1.845,338,1.382,339,1.382,340,0.788,341,2.387,342,1.845,343,2.216,344,0.788,345,0.788,346,0.788,347,1.382,348,1.382,349,1.382,350,2.52,351,1.382,352,0.788,353,0.788,354,1.382,355,0.788,356,0.63,357,0.63,358,1.104,359,0.63,360,1.104,361,0.788,362,0.788,363,0.788,364,0.788,365,0.788,366,0.788,367,0.788,368,0.788,369,0.788,370,1.382,371,1.382,372,0.788,373,0.788,374,0.788,375,0.788,376,0.788,377,0.788,378,0.788,379,0.788,380,0.788,381,0.788,382,0.788,383,0.788,384,0.788,385,0.788,386,0.788,387,0.788,388,0.788,389,0.788,390,0.788,391,1.382,392,0.788,393,0.788,394,0.788,395,0.788,396,0.788,397,0.788,398,0.788,399,0.788,400,0.788,401,1.382,402,1.382,403,0.788,404,0.788,405,1.845,406,0.788,407,0.788,408,0.788,409,0.788,410,0.788,411,0.788,412,0.788,413,0.788,414,0.788,415,0.788,416,0.788,417,0.788,418,0.788,419,0.63,420,0.788,421,0.788,422,0.788,423,0.788,424,0.788,425,0.788,426,0.788]],["title/modules.html",[30,1.527]],["body/modules.html",[11,0.047,26,0.047,27,0.047,29,2.108,30,1.57,40,1.814,58,2.475,262,3.565,427,4.462,428,4.462,429,4.783,430,3.715,431,3.715]],["title/overview.html",[432,2.888]],["body/overview.html",[2,1.504,11,0.05,18,1.856,26,0.042,27,0.042,28,0.976,29,2.79,30,1.301,31,1.504,32,2.052,33,2.052,34,1.504,35,1.747,36,1.747,37,2.46,38,2.46,39,2.46,40,2.346,41,2.646,42,2.052,43,2.052,49,2.052,55,2.052,73,1.747,121,1.856,135,2.46,136,2.46,304,2.46,306,3.51,307,2.46,432,2.46]],["title/properties.html",[75,2.136,167,1.795]],["body/properties.html",[11,0.054,26,0.048,27,0.048,75,2.541,419,3.046,433,3.814,434,3.814,435,3.814,436,3.814,437,3.814]],["title/miscellaneous/variables.html",[185,1.275,258,2.136]],["body/miscellaneous/variables.html",[7,0.811,11,0.055,24,1.25,26,0.037,27,0.037,60,2.339,72,1.082,73,1.992,81,2.339,82,1.693,147,1.992,156,2.045,157,2.805,159,2.805,161,2.045,185,1.452,258,1.706,298,2.805,299,3.444,341,2.045,356,2.805,357,2.805,358,2.805,359,2.805,360,2.805,438,2.56,439,2.56,440,3.511,441,3.511,442,4.007,443,4.312,444,3.511,445,3.511,446,2.56,447,2.56,448,2.56,449,2.56,450,2.56,451,2.56,452,2.56,453,2.56,454,2.56,455,2.56,456,2.56]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":434,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":155,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":304,"title":{},"body":{"index.html":{},"overview.html":{}}}],["10.0.0",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":306,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.6",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":424,"title":{},"body":{"index.html":{}}}],["3",{"_index":307,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4",{"_index":309,"title":{},"body":{"index.html":{}}}],["5",{"_index":313,"title":{},"body":{"index.html":{}}}],["5432",{"_index":359,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":317,"title":{},"body":{"index.html":{}}}],["7",{"_index":320,"title":{},"body":{"index.html":{}}}],["7.8.1",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["8081",{"_index":395,"title":{},"body":{"index.html":{}}}],["__dirname",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["account",{"_index":412,"title":{},"body":{"index.html":{}}}],["action",{"_index":145,"title":{},"body":{"injectables/UsersService.html":{}}}],["add",{"_index":339,"title":{},"body":{"index.html":{}}}],["adds",{"_index":146,"title":{},"body":{"injectables/UsersService.html":{}}}],["admin",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":210,"title":{},"body":{"index.html":{}}}],["app",{"_index":226,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appdatasource",{"_index":159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":191,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":437,"title":{},"body":{"properties.html":{}}}],["available",{"_index":431,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":208,"title":{},"body":{"index.html":{}}}],["before",{"_index":381,"title":{},"body":{"index.html":{}}}],["body",{"_index":117,"title":{},"body":{"controllers/UsersController.html":{}}}],["books",{"_index":195,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":429,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":262,"title":{},"body":{"index.html":{},"modules.html":{}}}],["bug",{"_index":205,"title":{},"body":{"index.html":{}}}],["built",{"_index":211,"title":{},"body":{"index.html":{}}}],["c",{"_index":423,"title":{},"body":{"index.html":{}}}],["case",{"_index":346,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cli",{"_index":252,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":402,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":135,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":136,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["coloring",{"_index":194,"title":{},"body":{"index.html":{}}}],["coloringbook",{"_index":297,"title":{},"body":{"index.html":{}}}],["column",{"_index":83,"title":{},"body":{"entities/User.html":{}}}],["common/dto/pagination",{"_index":324,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":390,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":391,"title":{},"body":{"index.html":{}}}],["compose",{"_index":233,"title":{},"body":{"index.html":{}}}],["const",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["contact",{"_index":416,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{}}}],["controller('users",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copyright",{"_index":422,"title":{},"body":{"index.html":{}}}],["cordova",{"_index":263,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":150,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coveragedocumentation",{"_index":389,"title":{},"body":{"index.html":{}}}],["create",{"_index":69,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(@body",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":101,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":198,"title":{},"body":{"index.html":{}}}],["createnotedto",{"_index":314,"title":{},"body":{"index.html":{}}}],["creates",{"_index":367,"title":{},"body":{"index.html":{}}}],["createuserdto",{"_index":54,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createusertable",{"_index":344,"title":{},"body":{"index.html":{}}}],["creating",{"_index":192,"title":{},"body":{"index.html":{}}}],["custom",{"_index":197,"title":{},"body":{"index.html":{}}}],["d",{"_index":235,"title":{},"body":{"index.html":{}}}],["data_source",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":298,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["database.providers",{"_index":61,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database_host=localhost",{"_index":221,"title":{},"body":{"index.html":{}}}],["database_host={database_host_ip",{"_index":408,"title":{},"body":{"index.html":{}}}],["database_name=coloringbookdb",{"_index":222,"title":{},"body":{"index.html":{}}}],["database_name=postgres",{"_index":409,"title":{},"body":{"index.html":{}}}],["database_password=passwordrunning",{"_index":225,"title":{},"body":{"index.html":{}}}],["database_password={database_password",{"_index":411,"title":{},"body":{"index.html":{}}}],["database_port=5432",{"_index":223,"title":{},"body":{"index.html":{}}}],["database_user=user",{"_index":224,"title":{},"body":{"index.html":{}}}],["database_user={database_user",{"_index":410,"title":{},"body":{"index.html":{}}}],["databasemodule",{"_index":58,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules.html":{}}}],["databaseproviders",{"_index":60,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":292,"title":{},"body":{"index.html":{}}}],["db_instance_name={myapplication",{"_index":413,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":120,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":112,"title":{},"body":{"controllers/UsersController.html":{}}}],["demo",{"_index":203,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":256,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":405,"title":{},"body":{"index.html":{}}}],["deployed",{"_index":400,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":399,"title":{},"body":{"index.html":{}}}],["description",{"_index":435,"title":{},"body":{"properties.html":{}}}],["dev",{"_index":289,"title":{},"body":{"index.html":{}}}],["development",{"_index":236,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":361,"title":{},"body":{"index.html":{}}}],["dist/migrations/*.js",{"_index":362,"title":{},"body":{"index.html":{}}}],["doc",{"_index":396,"title":{},"body":{"index.html":{}}}],["docker",{"_index":231,"title":{},"body":{"index.html":{}}}],["docs",{"_index":201,"title":{},"body":{"index.html":{}}}],["doctrine",{"_index":283,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":151,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":175,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["driver",{"_index":293,"title":{},"body":{"index.html":{}}}],["dto",{"_index":323,"title":{},"body":{"index.html":{}}}],["dto/create",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["electron",{"_index":269,"title":{},"body":{"index.html":{}}}],["email",{"_index":76,"title":{},"body":{"entities/User.html":{}}}],["engine",{"_index":404,"title":{},"body":{"index.html":{}}}],["entities",{"_index":73,"title":{},"body":{"entities/User.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":71,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{},"index.html":{}}}],["entity{.ts,.js",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entry",{"_index":340,"title":{},"body":{"index.html":{}}}],["env",{"_index":219,"title":{},"body":{"index.html":{}}}],["environment",{"_index":228,"title":{},"body":{"index.html":{}}}],["es5",{"_index":274,"title":{},"body":{"index.html":{}}}],["es6",{"_index":275,"title":{},"body":{"index.html":{}}}],["es7",{"_index":276,"title":{},"body":{"index.html":{}}}],["es8",{"_index":277,"title":{},"body":{"index.html":{}}}],["example",{"_index":216,"title":{},"body":{"index.html":{}}}],["executed",{"_index":371,"title":{},"body":{"index.html":{}}}],["exemple",{"_index":300,"title":{},"body":{"index.html":{}}}],["explore",{"_index":200,"title":{},"body":{"index.html":{}}}],["expo",{"_index":268,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":64,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":207,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":328,"title":{},"body":{"index.html":{}}}],["fill",{"_index":333,"title":{},"body":{"index.html":{}}}],["findall",{"_index":97,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":98,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":108,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":229,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":77,"title":{},"body":{"entities/User.html":{}}}],["following",{"_index":406,"title":{},"body":{"index.html":{}}}],["framework",{"_index":284,"title":{},"body":{"index.html":{}}}],["function",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":186,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":249,"title":{},"body":{"index.html":{}}}],["generate",{"_index":305,"title":{},"body":{"index.html":{}}}],["generated",{"_index":334,"title":{},"body":{"index.html":{}}}],["generates",{"_index":369,"title":{},"body":{"index.html":{}}}],["generation",{"_index":326,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":109,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":188,"title":{"index.html":{}},"body":{}}],["globally",{"_index":253,"title":{},"body":{"index.html":{}}}],["google",{"_index":401,"title":{},"body":{"index.html":{}}}],["graph",{"_index":430,"title":{},"body":{"modules.html":{}}}],["hello",{"_index":52,"title":{},"body":{"injectables/AppService.html":{}}}],["hibernate",{"_index":282,"title":{},"body":{"index.html":{}}}],["highly",{"_index":278,"title":{},"body":{"index.html":{}}}],["host",{"_index":356,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["hosted",{"_index":213,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":246,"title":{},"body":{"index.html":{}}}],["https://typeorm.io/#installation",{"_index":285,"title":{},"body":{"index.html":{}}}],["https://typeorm.io/#quick",{"_index":294,"title":{},"body":{"index.html":{}}}],["id",{"_index":78,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":199,"title":{},"body":{"index.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":196,"title":{},"body":{"index.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["influenced",{"_index":279,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["informations",{"_index":407,"title":{},"body":{"index.html":{}}}],["infra",{"_index":232,"title":{},"body":{"index.html":{}}}],["init",{"_index":296,"title":{},"body":{"index.html":{}}}],["initialdata",{"_index":383,"title":{},"body":{"index.html":{}}}],["initialization",{"_index":302,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":254,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":48,"title":{"injectables/AppService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":49,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":218,"title":{},"body":{"index.html":{}}}],["installation",{"_index":215,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":265,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":273,"title":{},"body":{"index.html":{}}}],["last",{"_index":374,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":79,"title":{},"body":{"entities/User.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":419,"title":{},"body":{"index.html":{},"properties.html":{}}}],["live",{"_index":202,"title":{},"body":{"index.html":{}}}],["loads",{"_index":257,"title":{},"body":{"index.html":{}}}],["local",{"_index":227,"title":{},"body":{"index.html":{}}}],["localcoloringbook",{"_index":397,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":357,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":80,"title":{},"body":{"entities/User.html":{}}}],["managed",{"_index":351,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":180,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["migration",{"_index":336,"title":{},"body":{"index.html":{}}}],["migration:create",{"_index":365,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":342,"title":{},"body":{"index.html":{}}}],["migration:revert",{"_index":372,"title":{},"body":{"index.html":{}}}],["migration:run",{"_index":347,"title":{},"body":{"index.html":{}}}],["migration:show",{"_index":377,"title":{},"body":{"index.html":{}}}],["migration:sync",{"_index":375,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":341,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":363,"title":{},"body":{"index.html":{}}}],["migrationtest",{"_index":384,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":185,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":240,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["module.exports",{"_index":355,"title":{},"body":{"index.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mount",{"_index":230,"title":{},"body":{"index.html":{}}}],["mymigration",{"_index":366,"title":{},"body":{"index.html":{}}}],["n",{"_index":343,"title":{},"body":{"index.html":{}}}],["name",{"_index":105,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["native",{"_index":266,"title":{},"body":{"index.html":{}}}],["nativescript",{"_index":267,"title":{},"body":{"index.html":{}}}],["needs",{"_index":370,"title":{},"body":{"index.html":{}}}],["nest",{"_index":212,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":251,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":250,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":169,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":67,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":173,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["new",{"_index":147,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":290,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":261,"title":{},"body":{"index.html":{}}}],["note",{"_index":310,"title":{},"body":{"index.html":{}}}],["note.dto",{"_index":316,"title":{},"body":{"index.html":{}}}],["notes",{"_index":301,"title":{},"body":{"index.html":{}}}],["notes/create",{"_index":315,"title":{},"body":{"index.html":{}}}],["notes/note.entity",{"_index":311,"title":{},"body":{"index.html":{}}}],["notes/update",{"_index":319,"title":{},"body":{"index.html":{}}}],["notexample",{"_index":380,"title":{},"body":{"index.html":{}}}],["npm",{"_index":217,"title":{},"body":{"index.html":{}}}],["npx",{"_index":295,"title":{},"body":{"index.html":{}}}],["number",{"_index":86,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["optional",{"_index":106,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["orm",{"_index":260,"title":{},"body":{"index.html":{}}}],["ormconfig.js",{"_index":353,"title":{},"body":{"index.html":{}}}],["orms",{"_index":280,"title":{},"body":{"index.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":432,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":392,"title":{},"body":{"index.html":{}}}],["package",{"_index":167,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagination",{"_index":321,"title":{},"body":{"index.html":{}}}],["param",{"_index":119,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":104,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":66,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":65,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":81,"title":{},"body":{"entities/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":118,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":115,"title":{},"body":{"controllers/UsersController.html":{}}}],["pending",{"_index":349,"title":{},"body":{"index.html":{}}}],["personalized",{"_index":193,"title":{},"body":{"index.html":{}}}],["pg",{"_index":177,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["phonegap",{"_index":264,"title":{},"body":{"index.html":{}}}],["platforms",{"_index":270,"title":{},"body":{"index.html":{}}}],["port",{"_index":358,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":102,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":299,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":95,"title":{},"body":{"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":87,"title":{},"body":{"entities/User.html":{}}}],["process.env",{"_index":259,"title":{},"body":{"index.html":{}}}],["production",{"_index":242,"title":{},"body":{"index.html":{}}}],["project",{"_index":247,"title":{},"body":{"index.html":{}}}],["properties",{"_index":75,"title":{"properties.html":{}},"body":{"entities/User.html":{},"properties.html":{}}}],["provide",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["query",{"_index":322,"title":{},"body":{"index.html":{}}}],["query.dto",{"_index":325,"title":{},"body":{"index.html":{}}}],["ravel",{"_index":426,"title":{},"body":{"index.html":{}}}],["react",{"_index":190,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":179,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["remove",{"_index":99,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":111,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":149,"title":{},"body":{"injectables/UsersService.html":{}}}],["report",{"_index":204,"title":{},"body":{"index.html":{}}}],["repository",{"_index":418,"title":{},"body":{"index.html":{}}}],["request",{"_index":206,"title":{},"body":{"index.html":{}}}],["required",{"_index":354,"title":{},"body":{"index.html":{}}}],["reserved",{"_index":421,"title":{},"body":{"index.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["rest",{"_index":209,"title":{},"body":{"index.html":{}}}],["restart",{"_index":345,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reverts",{"_index":373,"title":{},"body":{"index.html":{}}}],["rights",{"_index":420,"title":{},"body":{"index.html":{}}}],["run",{"_index":237,"title":{},"body":{"index.html":{}}}],["runs",{"_index":348,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":394,"title":{},"body":{"index.html":{}}}],["save",{"_index":286,"title":{},"body":{"index.html":{}}}],["schema",{"_index":338,"title":{},"body":{"index.html":{}}}],["schemasync",{"_index":368,"title":{},"body":{"index.html":{}}}],["script",{"_index":337,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":382,"title":{},"body":{"index.html":{}}}],["server",{"_index":335,"title":{},"body":{"index.html":{}}}],["service",{"_index":308,"title":{},"body":{"index.html":{}}}],["setup",{"_index":248,"title":{},"body":{"index.html":{}}}],["sh",{"_index":327,"title":{},"body":{"index.html":{}}}],["shim",{"_index":287,"title":{},"body":{"index.html":{}}}],["show",{"_index":378,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["source.ts",{"_index":157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["spec",{"_index":312,"title":{},"body":{"index.html":{}}}],["sql",{"_index":350,"title":{},"body":{"index.html":{}}}],["src/.../data",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["src/data",{"_index":156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database.module.ts",{"_index":59,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database.providers.ts",{"_index":161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":162,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations",{"_index":364,"title":{},"body":{"index.html":{}}}],["src/users/dto/create",{"_index":56,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":63,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":74,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":91,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:15",{"_index":84,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:18",{"_index":85,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:21",{"_index":89,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":88,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":90,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":94,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:19",{"_index":103,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":107,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":110,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":116,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:39",{"_index":113,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":137,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":139,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":141,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":142,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":144,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":143,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":140,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":238,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":241,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":243,"title":{},"body":{"index.html":{}}}],["started",{"_index":189,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["subscribers",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["such",{"_index":281,"title":{},"body":{"index.html":{}}}],["support",{"_index":427,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":428,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":245,"title":{},"body":{"index.html":{}}}],["sync",{"_index":376,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":166,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":244,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":388,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":387,"title":{},"body":{"index.html":{}}}],["tests",{"_index":386,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.usersservice.create(createuserdto",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":130,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{}}}],["todo",{"_index":398,"title":{},"body":{"index.html":{}}}],["touch",{"_index":220,"title":{},"body":{"index.html":{}}}],["true",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":393,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":417,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":92,"title":{},"body":{"entities/User.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm.a",{"_index":352,"title":{},"body":{"index.html":{}}}],["types",{"_index":68,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/node",{"_index":288,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":272,"title":{},"body":{"index.html":{}}}],["typings",{"_index":291,"title":{},"body":{"index.html":{}}}],["unit",{"_index":385,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":436,"title":{},"body":{"properties.html":{}}}],["up",{"_index":234,"title":{},"body":{"index.html":{}}}],["update",{"_index":100,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["update(@param('id",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":114,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatenotedto",{"_index":318,"title":{},"body":{"index.html":{}}}],["updates",{"_index":148,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":62,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["used",{"_index":271,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":72,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":70,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["user.dto.ts",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["username",{"_index":360,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":96,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["users.controller",{"_index":138,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":122,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users.service.ts",{"_index":332,"title":{},"body":{"index.html":{}}}],["users/create",{"_index":330,"title":{},"body":{"index.html":{}}}],["users/update",{"_index":331,"title":{},"body":{"index.html":{}}}],["users/user.entity",{"_index":329,"title":{},"body":{"index.html":{}}}],["users/users.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":93,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":40,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":121,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":403,"title":{},"body":{"index.html":{}}}],["value",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":258,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vercel",{"_index":214,"title":{},"body":{"index.html":{}}}],["version",{"_index":433,"title":{},"body":{"properties.html":{}}}],["via",{"_index":303,"title":{},"body":{"index.html":{}}}],["watch",{"_index":239,"title":{},"body":{"index.html":{}}}],["west1:xxx",{"_index":415,"title":{},"body":{"index.html":{}}}],["whether",{"_index":379,"title":{},"body":{"index.html":{}}}],["william",{"_index":425,"title":{},"body":{"index.html":{}}}],["world",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["xxx:europe",{"_index":414,"title":{},"body":{"index.html":{}}}],["zero",{"_index":255,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  login: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/data-source.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.6\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^8.1.1\n        \n            dotenv : ^16.4.7\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n    \n  \n\n  \n    A React application for creating personalized coloring books from imported or custom-created images.\n    \n    Explore the docs »\n    \n    \n    Live Demo\n    ·\n    Report Bug\n    ·\n    Request Feature\n  \n\n\nBackend\nBackend REST API.\nBuilt with Nest, TypeORM and hosted on Vercel\nInstallation\nExample :$ npm install\n\n# Create a .env file\ntouch .env\nDATABASE_HOST=localhost\nDATABASE_NAME=Coloringbookdb\nDATABASE_PORT=5432\nDATABASE_USER=user\nDATABASE_PASSWORD=passwordRunning the app in local environment\nExample :# First mount the docker from /infra\ndocker-compose up -d\n\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest in local\nYou can test the API with the Swagger on http://localhost:3000/api\nProject setup\nExample :npm install -g @nestjs/cli # Install the Nestjs cli globally\nnest new project-name # Initialize Nestjs project\n\n# Dotenv is a zero-dependency module that loads environment variables from \na .env file into process.env.\nnpm install dotenv\n\n\n# TypeORM is an ORM that can run in NodeJS, Browser, Cordova, PhoneGap, Ionic, \n#React Native, NativeScript, Expo, and Electron platforms and can be used with \n# TypeScript and JavaScript (ES5, ES6, ES7, ES8). TypeORM is highly influenced\n# by other ORMs, such as Hibernate, Doctrine and Entity Framework.\n# https://typeorm.io/#installation\nnpm install typeorm --save\nnpm install reflect-metadata --save # reflect-metadata shim\nnpm install @types/node --save-dev # node typings\nnpm install pg --save # db driver\nnpm install @nestjs/swagger --save\n\n# https://typeorm.io/#quick-start\nnpx typeorm init --name ColoringBook --database postgres \nExemple of the notes module initialization via the cli :\nExample :# 1. Generate the notes module\nnest generate module notes\n\n# 2. Generate notes controller\nnest generate controller notes\n\n# 3. Generate notes service\nnest generate service notes\n\n# 4. Generate note Entity\nnest g class notes/note.entity --no-spec\n\n# 5. Generate CreateNoteDTO\nnest g class notes/create-note.dto --no-spec\n\n# 6. Generate UpdateNoteDTO\nnest g class notes/update-note.dto --no-spec\n\n# 7. Generate pagination-query DTO\nnest generate class common/dto/pagination-query.dto --no-spec\n\n## Generation of the users module\n````sh\n# 1. Generate module files\n nest generate module users\n nest generate controller users\n nest generate class users/user.entity --no-spec\n nest g class users/create-user.dto --no-spec\n nest g class users/update-user.dto --no-spec\n\n# 2. Generate a new users.service.ts file\n# 3. Fill in generated files\n# 4. Run the server\nnpm run start:dev\n\n# 5. Create a new migration script\n# This will :\n# - Update the db schema \n# - Add a new entry in the migrations table\n# - Add a new migration file\nnpx typeorm migration:generate -n CreateUserTable\n\n## Restart the server\n\n# Run the new migration script\n# This will, in this case, create the new user table\nnpx typeorm migration:run # Runs all pending migrations\nMigrations\nSQL migrations is managed with typeorm.A ormconfig.js file is required :\nExample :module.exports = {\n  type: 'postgres',\n  host: 'localhost',\n  port: 5432,\n  username: 'username',\n  password: 'password',\n  database: 'database',\n  entities: ['dist/**/*.entity{.ts,.js}'],\n  migrations: ['dist/migrations/*.js'],\n  cli: {\n    migrationsDir: 'src/migrations',\n  },\n};Example :npx typeorm migration:create -n MyMigration # Creates a new migration file\nnpx typeorm migration:generate -n SchemaSync # Generates a new migration file with sql needs to be executed to update schema.\nnpx typeorm migration:run # Runs all pending migrations\nnpx typeorm migration:revert # Reverts last executed migration\n#npx typeorm migration:sync # Sync migration\nnpx typeorm migration:show # Show all migrations and whether they have been run or notExample :The server needs to be started before the scripts can update the migration table :\nExample :npm run start:dev # Start the backend\nnpx typeorm migration:generate -n InitialData # Initialize a first migrationTest\nExample :$ npm run test # unit tests\n$ npm run test:e2e \n$ npm run test:cov # test coverageDocumentation\nThe backend documentation is generated with Compodoc.\nExample :npm i -D @compodoc/compodoc\nnpx @compodoc/compodoc -p tsconfig.json -s --port 8081\n# Or with the project script\nnpm run generate-doc-localColoringbook API documentation\nTODO\nDeployment to production\nThe backend is deployed on Google Cloud using App Engine.\nPostgres SQL is managed with Google Cloud SQL.\nTo deploy :\nExample :# A .env file is required with the following informations :\n\n# SQL env\nDATABASE_HOST={database_host_ip}\nDATABASE_NAME=postgres\nDATABASE_PORT=5432\nDATABASE_USER={database_user}\nDATABASE_PASSWORD={database_password}\n\n# Service account\nDB_INSTANCE_NAME={myapplication-xxx:europe-west1:xxx}\n\n# Deploy to production\nnpm run deploy\nContact\n\n@twitter\nColoringbook repository\n\nLicense\nAll Rights Reserved\nCopyright (c) 2025 William Ravel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppDataSource   (src/.../data-source.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: 'postgres',\n  host: 'localhost',\n  port: 5432,\n  username: 'admin',\n  password: 'admin',\n  database: 'postgres',\n  synchronize: true,\n  logging: false,\n  entities: [User],\n  migrations: [],\n  subscribers: [],\n})\n                    \n                \n\n\n        \n    \n\n    src/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATA_SOURCE',\n    useFactory: async () => {\n      const dataSource = new DataSource({\n        type: 'postgres',\n        host: 'localhost',\n        port: 5432,\n        username: 'admin',\n        password: 'admin',\n        database: 'postgres',\n        entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n        synchronize: true,\n      });\n\n      return dataSource.initialize();\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
